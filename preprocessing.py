# -*- coding: utf-8 -*-
"""ClimateChange_Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EFRivpminBqhPGYTFZ6CgTiQRNylyllu
"""

!pip install rasterio
!pip install tqdm

import pandas as pd  # For data manipulation and analysis
import os  # For interacting with the operating system
import rasterio  # For working with raster data
import numpy as np  # For numerical operations
from tqdm import tqdm  # For creating progress bars during loops

def preprocess_data(csv_file, root_dir, output_dir):
    """
    Preprocesses image and label data from a CSV file.

    Args:
        csv_file (str): Path to the CSV file containing image information.
        root_dir (str): Root directory where image folders are located.
        output_dir (str): Directory where preprocessed data will be saved.
    """
    df = pd.read_csv(csv_file)  # Read the CSV file into a Pandas DataFrame
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    for idx, row in tqdm(df.iterrows()): #Iterate through each row in the DataFrame
        image_id = row['id'] # Get the image ID from the current row
        folder_path = os.path.join(root_dir, image_id) # Construct the path to the image folder

        # List of band file names
        band_files = [
            "TOA_AVIRIS_460nm.tif",
            "TOA_AVIRIS_550nm.tif",
            "TOA_AVIRIS_640nm.tif",
            "TOA_AVIRIS_2004nm.tif",
            "TOA_AVIRIS_2109nm.tif",
            "TOA_AVIRIS_2310nm.tif",
            "TOA_AVIRIS_2350nm.tif",
            "TOA_AVIRIS_2360nm.tif",
            "mag1c.tif"
        ]
        bands = []
        for file_name in band_files: # Iterate through each band file
            file_path = os.path.join(folder_path, file_name)
            with rasterio.open(file_path) as src:
                band = src.read(1) # Read the first band of the image
                bands.append(band) # Add the band to the list

        # Stack bands along the first dimension
        image = np.stack(bands, axis=0) # Stack the bands into a multi-band image
        np.save(os.path.join(output_dir, f"{image_id}_image.npy"), image) # Save the image as a NumPy array

        # Process the label file
        label_file = os.path.join(folder_path, "labelbinary.tif")  # Construct the path to the label file
        with rasterio.open(label_file) as src:
            label = src.read(1)  # Read the label from the file
        np.save(os.path.join(output_dir, f"{image_id}_label.npy"), label)  # Save the label as a NumPy array

#Preprocessing Train
train_csv = "/content/drive/MyDrive/ClimateChange/STARCOP_train_easy/train_easy.csv"
root_dir  = "/content/drive/MyDrive/ClimateChange/STARCOP_train_easy"
output_dir = "/content/drive/MyDrive/ClimateChange/preprocessed/STARCOP_train_easy"
preprocess_data(train_csv, root_dir, output_dir)

#Preprocessing Test
test_csv  = "/content/drive/MyDrive/ClimateChange/STARCOP_test/test.csv"
root_dir_test   = "/content/drive/MyDrive/ClimateChange/STARCOP_test"
output_dir_test = "/content/drive/MyDrive/ClimateChange/preprocessed/STARCOP_test"
preprocess_data(test_csv, root_dir_test, output_dir_test)
